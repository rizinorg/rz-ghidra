name: coverity-scan
on:  [push]
#  schedule:
#    - cron: '0 9 * * 1,5' # Bi-weekly at 09:00 UTC on Monday and Thursday

jobs:
  latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7.x

#      - name: Download Coverity Build Tool
#        run: |
#          wget -q https://scan.coverity.com/download/cxx/linux64 --post-data "token=$TOKEN&project=radareorg%2Fr2ghidra-dec" -O cov-analysis-linux64.tar.gz
#          mkdir cov-analysis-linux64
#          tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
#        env:
#          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
#
#      - name: Fixed world writable dirs
#        run: |
#          chmod go-w $HOME
#          sudo chmod -R go-w /usr/share
      
      - name: apt dependencies
        run: sudo apt-get install ninja-build libgraphviz-dev bison flex
      
      - name: py dependencies
        run: |
          pip install meson

      - name: Prepare Radare2 and Cutter
        run: |
          export INSTALL_PREFIX=$GITHUB_WORKSPACE}/radare2-prefix
          git clone --depth 1 https://github.com/radareorg/radare2
          cd radare2 && mkdir build && cd build
          meson --prefix="${INSTALL_PREFIX}" ..
          ninja
          ninja install
          cd ../..
          git clone --depth 1 https://github.com/radareorg/cutter

      - name: CMake
        run: |
          export INSTALL_PREFIX=${GITHUB_WORKSPACE}/radare2-prefix
          export PKG_CONFIG_PATH=${INSTALL_PREFIX}/lib/pkgconfig:${INSTALL_PREFIX}/lib/$(uname -m)-linux-gnu/pkgconfig:${PKG_CONFIG_PATH}
          mkdir build && cd build
          cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="$INSTALL_PREFIX;/opt/qt512" \
            -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" \
            -DBUILD_CUTTER_PLUGIN=ON \
            -DCUTTER_SOURCE_DIR="$GITHUB_WORKSPACE/cutter" \
            -DBUILD_SLEIGH_PLUGIN=ON \
            ..

      - name: Build and Install
        run: |
          cd build
          make -j4
          make install

      - name: Test
        run: |
          export LD_LIBRARY_PATH="$INSTALL_PREFIX/lib:$INSTALL_PREFIX/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
          export PATH="$INSTALL_PREFIX/bin:$PATH"
          export R2_LIBR_PLUGINS="$INSTALL_PREFIX/share/radare2/plugins"
          cd test
          make

#      - name: Build with cov-build
#        run: |
#          export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
#          cd build
#          cov-build --dir cov-int make
#
#      - name: Submit the result to Coverity Scan
#        run: |
#          cd build
#          tar czvf r2ghidra.tgz cov-int
#          curl \
#            --form project=radareorg-cutter \
#            --form token=$TOKEN \
#            --form email=noreply@radare.org \
#            --form file=@r2ghidra.tgz \
#            --form version=trunk \
#            --form description="r2ghidra" \
#            https://scan.coverity.com/builds?project=radareorg%2Fr2ghidra-dec
#        env:
#          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
